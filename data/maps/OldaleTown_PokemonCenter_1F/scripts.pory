raw `
.set LOCALID_NURSE, 1

OldaleTown_PokemonCenter_1F_MapScripts::
	map_script MAP_SCRIPT_ON_TRANSITION, OldaleTown_PokemonCenter_1F_OnTransition
	map_script MAP_SCRIPT_ON_RESUME, CableClub_OnResume
	.byte 0

OldaleTown_PokemonCenter_1F_OnTransition:
	setrespawn HEAL_LOCATION_OLDALE_TOWN
	call Common_EventScript_UpdateBrineyLocation
	end

OldaleTown_PokemonCenter_1F_EventScript_Nurse::
	setvar VAR_0x800B, LOCALID_NURSE
	call Common_EventScript_PkmnCenterNurse
	waitmessage
	waitbuttonpress
	release
	end

OldaleTown_PokemonCenter_1F_EventScript_Gentleman::
	msgbox OldaleTown_PokemonCenter_1F_Text_TrainersCanUsePC, MSGBOX_NPC
	end

OldaleTown_PokemonCenter_1F_EventScript_Boy::
	msgbox OldaleTown_PokemonCenter_1F_Text_PokemonCentersAreGreat, MSGBOX_NPC
	end

OldaleTown_PokemonCenter_1F_EventScript_Girl::
	lock
	faceplayer
	goto_if_set FLAG_SYS_POKEDEX_GET, OldaleTown_PokemonCenter_1F_EventScript_WirelessClubAvailable
	msgbox OldaleTown_PokemonCenter_1F_Text_WirelessClubNotAvailable, MSGBOX_DEFAULT
	release
	end

OldaleTown_PokemonCenter_1F_EventScript_WirelessClubAvailable::
	msgbox OldaleTown_PokemonCenter_1F_Text_TradedInWirelessClub, MSGBOX_DEFAULT
	release
	end

OldaleTown_PokemonCenter_1F_EventScript_EggMan::
	lock
	faceplayer
	goto_if_unset FLAG_SYS_DEXNAV_GET, OldaleTown_PokemonCenter_1F_EventScript_NotReadyForEggYet
	goto_if_set FLAG_RECEIVED_OLDALE_EGG, OldaleTown_PokemonCenter_1F_EventScript_ReceivedEgg
	msgbox OldaleTown_PokemonCenter_1F_Text_HaveEggWillYouTakeIt, MSGBOX_YESNO
	goto_if_eq VAR_RESULT, NO, OldaleTown_PokemonCenter_1F_EventScript_DeclineEgg
	getpartysize
	goto_if_eq VAR_RESULT, PARTY_SIZE, OldaleTown_PokemonCenter_1F_EventScript_NoRoomForEgg
	msgbox OldaleTown_PokemonCenter_1F_Text_HopeYoullWalkPlentyWithEgg, MSGBOX_DEFAULT
	setflag FLAG_RECEIVED_OLDALE_EGG
	playfanfare MUS_OBTAIN_ITEM
	message OldaleTown_PokemonCenter_1F_Text_ReceivedTheEgg
	waitfanfare
	giveegg SPECIES_SENTRET
	release
	end

OldaleTown_PokemonCenter_1F_EventScript_NotReadyForEggYet::
	msgbox OldaleTown_PokemonCenter_1F_Text_NotReadyForEggYet, MSGBOX_DEFAULT
	release
	end

OldaleTown_PokemonCenter_1F_EventScript_ReceivedEgg::
	msgbox OldaleTown_PokemonCenter_1F_Text_EverySoOftenEggFoundAtDayCare, MSGBOX_DEFAULT
	release
	end

OldaleTown_PokemonCenter_1F_EventScript_DeclineEgg::
	msgbox OldaleTown_PokemonCenter_1F_Text_AsYouWishThen, MSGBOX_DEFAULT
	release
	end

OldaleTown_PokemonCenter_1F_EventScript_NoRoomForEgg::
	msgbox OldaleTown_PokemonCenter_1F_Text_NoRoomForThisEgg, MSGBOX_DEFAULT
	release
	end

OldaleTown_PokemonCenter_1F_Text_NotReadyForEggYet:
	.string "I have an Egg here, and I am looking for\n"
	.string "a trainer with enough experience to\l"
	.string "take it from me to hatch it.\p"
	.string "You don't seem like you have quite\n"
	.string "enough experience yet; perhaps come\l"
	.string "back after you've received a Pokédex.$"

OldaleTown_PokemonCenter_1F_Text_EverySoOftenEggFoundAtDayCare:
	.string "I truly have no idea what\n"
	.string "is inside that egg.$"

OldaleTown_PokemonCenter_1F_Text_HaveEggWillYouTakeIt:
	.string "I have an Egg here, but I'm too old to be\n"
	.string "running around for long enough for it\l"
	.string "to hatch.\p"
	.string "I see you have a Pokédex, you must be a\n"
	.string "trustworthy trainer.\p"
	.string "Will you take this Egg from me?$"

OldaleTown_PokemonCenter_1F_Text_AsYouWishThen:
	.string "As you wish, then…\p"
	.string "If you have a change of heart about\n"
	.string "hatching this Egg, I will be here.$"

OldaleTown_PokemonCenter_1F_Text_NoRoomForThisEgg:
	.string "Oh? You've too many Pokémon.\n"
	.string "There's no room for this Egg…$"

OldaleTown_PokemonCenter_1F_Text_HopeYoullWalkPlentyWithEgg:
	.string "Good! I hope you'll walk plenty with\n"
	.string "that there Egg!$"

OldaleTown_PokemonCenter_1F_Text_ReceivedTheEgg:
	.string "{PLAYER} received the Egg.$"

OldaleTown_PokemonCenter_1F_Text_TrainersCanUsePC:
	.string "That PC in the corner there is\n"
	.string "for any Pokémon TRAINER to use.\p"
	.string "Naturally, that means you're welcome\n"
	.string "to use it, too.$"

OldaleTown_PokemonCenter_1F_Text_PokemonCentersAreGreat:
	.string "Pokémon CENTERS are great!\p"
	.string "You can use their services as much\n"
	.string "as you like, and it's all for free.\l"
	.string "You never have to worry!$"

OldaleTown_PokemonCenter_1F_Text_WirelessClubNotAvailable:
	.string "The Pokémon WIRELESS CLUB on\n"
	.string "the second floor was built recently.\p"
	.string "But they say they're still making\n"
	.string "adjustments.$"

OldaleTown_PokemonCenter_1F_Text_TradedInWirelessClub:
	.string "The Pokémon WIRELESS CLUB on\n"
	.string "the second floor was built recently.\p"
	.string "I traded Pokémon right away.$"

`

script OldDaleTown_PokemonCenter_EventScript_SecondNurse {
    lock
    faceplayer
	msgbox(HelloHowCanIHelp)
	dynmultipush("Nature Change", 0)
	dynmultipush("Gender Swap", 1)
	if(!flag(FLAG_MET_REGULAR_MOVE_TUTOR)){
		dynmultipush("{COLOR WHITE}{SHADOW LIGHT_GRAY}Set Mon to Lvl Cap{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}", 2)
	}
	else{
		dynmultipush("Set Mon to Lvl Cap", 2)
	}

	if(!flag(FLAG_MET_REGULAR_MOVE_TUTOR)){
		dynmultipush("{COLOR WHITE}{SHADOW LIGHT_GRAY}Set Box to Lvl Cap{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}", 3)
	}
	else{
		dynmultipush("Set Box to Lvl Cap", 3)
	}
	
	dynmultipush("White Out Counter", 4)
	dynmultipush("Mode Info", 5)
    dynmultipush("Cancel", MULTI_B_PRESSED)
    // setting initial selected to a non-existant ID will always have it point to the first option
	//.macro dynmultistack left:req, top:req, ignoreBPress:req, maxBeforeScroll:req, shouldSort:req, initialSelected:req, callbacks:req
	dynmultistack(0, 0, FALSE, 6, FALSE, 0, DYN_MULTICHOICE_CB_NONE)

    if (var(VAR_RESULT) == MULTI_B_PRESSED) 
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurseNo)
	}

	if (var(VAR_RESULT) == 0)
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurse_ChangeNature)
	}

	if (var(VAR_RESULT) == 1)
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurse_SwapGender)
	}

	if (var(VAR_RESULT) == 2)
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurse_SetToLevelCap)	
	}

	if (var(VAR_RESULT) == 3)
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurse_SetBoxToLevelCap)	
	}

	if (var(VAR_RESULT) == 4)
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurse_GetWhiteOutCount)	
	}

	if (var(VAR_RESULT) == 5)
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurse_ModeInfo)	
	}
}

script OldDaleTown_PokemonCenter_EventScript_SecondNurse_ChangeNature{
	msgbox("Which Pokémon?")
	special(ChoosePartyMon)
	waitstate
	if(var(VAR_0x8004) == PARTY_NOTHING_CHOSEN)
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurseNo)
	}
	specialvar(VAR_RESULT, ScriptGetPartyMonSpecies)
	if(var(VAR_RESULT) == SPECIES_EGG) {
		msgbox("I can't change the Nature of an Egg.")
		release
		end
	}
	special(BufferMonNickname)
	msgbox("Which new Nature suits {STR_VAR_1}\nbest?")
	dynmultipush("Adamant       {COLOR RED}{SHADOW LIGHT_RED}+Atk{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-SpAtk", NATURE_ADAMANT)
	dynmultipush("Bashful        Neutral         ", NATURE_BASHFUL)
	dynmultipush("Bold             {COLOR RED}{SHADOW LIGHT_RED}+Def{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-Atk       ", NATURE_BOLD)
	dynmultipush("Brave           {COLOR RED}{SHADOW LIGHT_RED}+Atk{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-Speed     ", NATURE_BRAVE)
	dynmultipush("Calm             {COLOR RED}{SHADOW LIGHT_RED}+SpDef{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-Atk     ", NATURE_CALM)
	dynmultipush("Careful       {COLOR RED}{SHADOW LIGHT_RED}+SpDef{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-SpAtk   ", NATURE_CAREFUL)
	dynmultipush("Docile          Neutral         ", NATURE_DOCILE)
	dynmultipush("Gentle         {COLOR RED}{SHADOW LIGHT_RED}+SpDef{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-Def     ", NATURE_GENTLE)
	dynmultipush("Hardy           Neutral         ", NATURE_HARDY)
	dynmultipush("Hasty          {COLOR RED}{SHADOW LIGHT_RED}+Speed{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-Def     ", NATURE_HASTY)
	dynmultipush("Impish         {COLOR RED}{SHADOW LIGHT_RED}+Def{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-SpAtk   ", NATURE_IMPISH)
	dynmultipush("Jolly           {COLOR RED}{SHADOW LIGHT_RED}+Speed{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-SpAtk   ", NATURE_JOLLY)
	dynmultipush("Lax              {COLOR RED}{SHADOW LIGHT_RED}+Def{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-SpDef   ", NATURE_LAX)
	dynmultipush("Lonely         {COLOR RED}{SHADOW LIGHT_RED}+Atk{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-Def     ", NATURE_LONELY)
	dynmultipush("Mild             {COLOR RED}{SHADOW LIGHT_RED}+SpAtk{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-Def   ", NATURE_MILD)
	dynmultipush("Modest        {COLOR RED}{SHADOW LIGHT_RED}+SpAtk{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-Atk   ", NATURE_MODEST)
	dynmultipush("Naive          {COLOR RED}{SHADOW LIGHT_RED}+Speed{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-SpDef ", NATURE_NAIVE)
	dynmultipush("Naughty      {COLOR RED}{SHADOW LIGHT_RED}+Atk{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-SpDef   ", NATURE_NAUGHTY)
	dynmultipush("Quiet          {COLOR RED}{SHADOW LIGHT_RED}+SpAtk{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-Speed ", NATURE_QUIET)
	dynmultipush("Quirky          Neutral         ", NATURE_QUIRKY)
	dynmultipush("Rash            {COLOR RED}{SHADOW LIGHT_RED}+SpAtk{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-SpDef ", NATURE_RASH)
	dynmultipush("Relaxed       {COLOR RED}{SHADOW LIGHT_RED}+Def{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-Speed   ", NATURE_RELAXED)
	dynmultipush("Sassy          {COLOR RED}{SHADOW LIGHT_RED}+SpDef{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-Speed ", NATURE_SASSY)
	dynmultipush("Serious       Neutral         ", NATURE_SERIOUS)
	dynmultipush("Timid           {COLOR RED}{SHADOW LIGHT_RED}+Speed{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}/{COLOR BLUE}{SHADOW LIGHT_BLUE}-Atk   ", NATURE_TIMID)
	dynmultipush("Cancel", MULTI_B_PRESSED)
	// // setting initial selected to a non-existant ID will always have it point to the first option
	dynmultistack(0, 0, FALSE, 6, FALSE, 3, DYN_MULTICHOICE_CB_NONE)

	if (var(VAR_RESULT) == MULTI_B_PRESSED) 
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurseNo)
	}

	copyvar(VAR_0x8005, VAR_RESULT)
	buffernaturename(STR_VAR_2, VAR_RESULT)
	msgbox(AreYouSureNatureChange, MSGBOX_YESNO)

	if(var(VAR_RESULT) == NO) 
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurseNo)
	}

	msgbox("Excellent. We shall begin at once!")
	fadescreen(FADE_TO_BLACK)
	special(ChangeMonNature)
	playfanfare(MUS_OBTAIN_ITEM)
	waitfanfare
	closemessage
	fadescreen(FADE_FROM_BLACK)
	msgbox("{STR_VAR_1}'s Nature has been\nchanged. Come again if you need\lsomething else.")
	release
	end
}


script OldDaleTown_PokemonCenter_EventScript_SecondNurse_SwapGender{
	msgbox(GenderSwapInfo)
	special(ChoosePartyMon)
	waitstate
	if(var(VAR_0x8004) == PARTY_NOTHING_CHOSEN)
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurseNo)
	}
	specialvar(VAR_RESULT, ScriptGetPartyMonSpecies)
	switch (var(VAR_RESULT)) {
        case SPECIES_SNORUNT:
		case SPECIES_RALTS:
        case SPECIES_KIRLIA:
		case SPECIES_SALANDIT:
        case SPECIES_BURMY_PLANT:
		case SPECIES_BURMY_SANDY:
		case SPECIES_BURMY_TRASH:
		case SPECIES_COMBEE:
        case SPECIES_ESPURR:
		case SPECIES_BASCULIN_RED_STRIPED:
		case SPECIES_BASCULIN_BLUE_STRIPED:
		case SPECIES_BASCULIN_WHITE_STRIPED:
        case SPECIES_LECHONK:
			special(BufferMonNickname)
			msgbox(AreYouSureGenderSwap, MSGBOX_YESNO)
			if(var(VAR_RESULT) == NO) 
			{
				goto(OldDaleTown_PokemonCenter_EventScript_SecondNurseNo)
			}
            msgbox("Excellent. We shall begin at once!")
			fadescreen(FADE_TO_BLACK)
			special(ChangeMonGender)
			playfanfare(MUS_OBTAIN_ITEM)
			waitfanfare
			closemessage
			fadescreen(FADE_FROM_BLACK)
			msgbox("{STR_VAR_1}'s Gender has been\nswapped. Come again if you need\lsomething else.")

		case SPECIES_EGG:
			msgbox("I can't swap the Gender of an Egg.")

        default:
            msgbox("Sorry, I can't swap the Gender of\nthat Pokémon.")
    }
	release
	end
}

script OldDaleTown_PokemonCenter_EventScript_SecondNurseNo {
    msgbox("I see. Come back if you need\nsomething else.")
    release
    end
}

script OldDaleTown_PokemonCenter_EventScript_SecondNurse_SetToLevelCap{
	if(!flag(FLAG_MET_REGULAR_MOVE_TUTOR))
	{
		msgbox(FeatureAvailableAfterMoveTutor)
		release
		end
	}
	specialvar(VAR_0x8006, GetLevelCapForText)
	buffernumberstring(STR_VAR_3, VAR_0x8006)
	msgbox(TellLevelCapAndAsk, MSGBOX_YESNO)
	if(var(VAR_RESULT) == NO) 
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurseNo)
	}
	msgbox("Which Pokémon?")
	special(ChoosePartyMon)
	waitstate
	if(var(VAR_0x8004) == PARTY_NOTHING_CHOSEN)
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurseNo)
	}
	specialvar(VAR_RESULT, ScriptGetPartyMonSpecies)
	if(var(VAR_RESULT) == SPECIES_EGG) {
		msgbox("I can't level up an Egg.")
		release
		end
	}
	specialvar(VAR_0x8007, ScriptGetPartyMonLevel)
	compare(VAR_0x8007, VAR_0x8006)
	goto_if_eq(OldDaleTown_PokemonCenter_EventScript_SecondNurse_MonAlreadyAtCap)
	special(BufferMonNickname)
	msgbox(AreYouSureLevelCap, MSGBOX_YESNO)
	if(var(VAR_RESULT) == NO) 
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurseNo)
	}
	msgbox("Excellent. We shall begin at once!")
	fadescreen(FADE_TO_BLACK)
	special(SetMonToLevelCap)
	playfanfare(MUS_OBTAIN_ITEM)
	waitfanfare
	closemessage
	fadescreen(FADE_FROM_BLACK)
	msgbox(MonHasBeenSetToLevelCap)
	release
	end
}

script OldDaleTown_PokemonCenter_EventScript_SecondNurse_SetBoxToLevelCap{
	if(!flag(FLAG_MET_REGULAR_MOVE_TUTOR))
	{
		msgbox(FeatureAvailableAfterMoveTutor)
		release
		end
	}
	specialvar(VAR_0x8006, GetLevelCapForText)
	buffernumberstring(STR_VAR_3, VAR_0x8006)
	msgbox(TellLevelCapAndAskBox, MSGBOX_YESNO)
	if(var(VAR_RESULT) == NO) 
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurseNo)
	}
	msgbox(AreYouSureLevelCapBox, MSGBOX_YESNO)
	if(var(VAR_RESULT) == NO) 
	{
		goto(OldDaleTown_PokemonCenter_EventScript_SecondNurseNo)
	}
	msgbox("Excellent. We shall begin at once!")
	fadescreen(FADE_TO_BLACK)
	special(LevelBoxesToCap)
	playfanfare(MUS_OBTAIN_ITEM)
	waitfanfare
	closemessage
	fadescreen(FADE_FROM_BLACK)
	msgbox(BoxHasBeenSetToLevelCap)
	release
	end
}

script OldDaleTown_PokemonCenter_EventScript_SecondNurse_MonAlreadyAtCap{
	msgbox("That Pokémon is already level {STR_VAR_3}.")
	release
	end
}

script OldDaleTown_PokemonCenter_EventScript_SecondNurse_GetWhiteOutCount{
	specialvar(VAR_RESULT, GetWhiteOutCountForText)
	if (var(VAR_RESULT) == 0)
	{
		msgbox("Current White Out Count: 0")
	}
	else
	{
		buffernumberstring(STR_VAR_1, VAR_RESULT)
		msgbox("Current White Out Count: {STR_VAR_1}")
	}
	release
	end
}

script OldDaleTown_PokemonCenter_EventScript_SecondNurse_ModeInfo{
	msgbox(VersionNumber)

	if(flag(FLAG_MIN_GRINDING_MODE))
	{
		if(var(VAR_GAME_SETTING_DIFFICULTY_MODE) == GAME_SETTING_DIFFICULTY_EASY_MODE)
		{
			msgbox(EasyModeWithMgm)
		}
		else
		{
			msgbox(NormalModeWithMgm)
		}
	}
	else
	{
		if(var(VAR_GAME_SETTING_DIFFICULTY_MODE) == GAME_SETTING_DIFFICULTY_EASY_MODE)
		{
			msgbox(EasyMode)
		}
		else
		{
			msgbox(NormalMode)
		}
	}
	msgbox("Randomizer options:")
	if(flag(FLAG_RANDOMIZER_ENABLED))
	{
		switch(var(VAR_RANDOMIZER_MODE))
		{
			case MON_RANDOM:
				msgbox("{COLOR GREEN}{SHADOW LIGHT_GREEN}Normal Species")
			case MON_RANDOM_BST:
				msgbox("{COLOR GREEN}{SHADOW LIGHT_GREEN}Scaled Species")
			case MON_RANDOM_LEGEND_AWARE:
				msgbox("{COLOR GREEN}{SHADOW LIGHT_GREEN}Legendary-aware Species")
			default:
				msgbox("Species not randomized")
		}
	}
	if(flag(FLAG_RANDOM_ABILITIES_ENABLED))
	{
		msgbox("{COLOR GREEN}{SHADOW LIGHT_GREEN}Abilities")
	}
	if(flag(FLAG_RANDOM_LEARNSETS_ENABLED))
	{
		msgbox("{COLOR GREEN}{SHADOW LIGHT_GREEN}Learnsets")
	}
	if(!flag(FLAG_RANDOMIZER_ENABLED) && !flag(FLAG_RANDOM_ABILITIES_ENABLED) && !flag(FLAG_RANDOM_LEARNSETS_ENABLED))
	{
		msgbox("{COLOR RED}{SHADOW LIGHT_RED}None")
	}
	release
	end
}

text HelloHowCanIHelp
{
	"Hello there, what can I help you\n"
	"with today?"
}

text AreYouSureNatureChange
{
	"I will now change\n"
	"{STR_VAR_1}'s Nature to {STR_VAR_2}.\p"
	"Is that okay?"
}


text GenderSwapInfo
{
	"I can swap the Gender of the\n"
	"following Pokémon:\p"
	"{COLOR GREEN}{SHADOW LIGHT_GREEN}Snorunt, Ralts, Kirlia, Salandit, Burmy,\n"
	"Combee, Espurr, Basculin, and Lechonk.\p"
	"{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}This is because these Pokémon have\n"
	"Gender-based evolutions.\p"
	"Which Pokémon's Gender should I swap?"
}

text AreYouSureGenderSwap
{
	"I will now swap\n"
	"{STR_VAR_1}'s Gender.\p"
	"Is that okay?"
}

text TellLevelCapAndAsk
{
	"Current Level Cap: {STR_VAR_3}.\p"
	"Would you like to set a Pokémon\n"
	"to level {STR_VAR_3}?"
}

text AreYouSureLevelCap
{
	"I will now set {STR_VAR_1}\n"
	"to level {STR_VAR_3}.\p"
	"Is that okay?"
}

text MonHasBeenSetToLevelCap
{
	"{STR_VAR_1} has been set\n"
	"to level {STR_VAR_3}.\p"
	"Come again if you need something else."
}

text TellLevelCapAndAskBox
{
	"Current Level Cap: {STR_VAR_3}.\p"
	"I can set all Unmarked Pokémon in your\n"
	"PC and Party to level {STR_VAR_3}.\p"
	"{COLOR GREEN}{SHADOW LIGHT_GREEN}You can Mark Pokémon to NOT be leveled\n"
	"up using the “Mark” option in your PC.\p"
	"{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}Would you like me to set all Unmarked\n"
	"Pokémon to level {STR_VAR_3}?"
}

text AreYouSureLevelCapBox
{
	"I will now set all Unmarked Pokémon in\n"
	"your PC and Party to level {STR_VAR_3}.\p"
	"Is that okay?"
}

text BoxHasBeenSetToLevelCap
{
	"All Unmarked Pokémon in your PC and\n"
	"Party have been set to level {STR_VAR_3}.\p"
	"Come again if you need something else."
}

text FeatureAvailableAfterMoveTutor
{
	"This feature will become available once\n"
	"you have met the Move Relearner in\l"
	"Dewford Town."
}

text VersionNumber
{
	"Version: 1.2"
}

text EasyMode
{
	"Difficulty: {COLOR GREEN}{SHADOW LIGHT_GREEN}Easy Mode"
}

text EasyModeWithMgm
{
	"Difficulty: {COLOR GREEN}{SHADOW LIGHT_GREEN}Easy Mode\n"
	"{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}with {COLOR GREEN}{SHADOW LIGHT_GREEN}Minimal Grinding Mode"
}

text NormalMode
{
	"Difficulty: {COLOR GREEN}{SHADOW LIGHT_GREEN}Normal Mode"
}

text NormalModeWithMgm
{
	"Difficulty: {COLOR GREEN}{SHADOW LIGHT_GREEN}Normal Mode\n"
	"{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}with {COLOR GREEN}{SHADOW LIGHT_GREEN}Minimal Grinding Mode"
}

text LevelCapIncreasedTo
{
	"{COLOR BLUE}{SHADOW LIGHT_BLUE}Level Cap increased to: {STR_VAR_3}."
}