raw `
.set LOCALID_LITTLE_GIRL, 9
@ NOTE: Route 109's sail to Dewford script references local IDs from Dewford's map.
@  These are labeled in DewfordTown/scripts.inc

Route109_MapScripts::
	map_script MAP_SCRIPT_ON_TRANSITION, Route109_OnTransition
	map_script MAP_SCRIPT_ON_LOAD, Route109_OnLoad
	map_script MAP_SCRIPT_ON_WARP_INTO_MAP_TABLE, Route109_OnWarp
	map_script MAP_SCRIPT_ON_FRAME_TABLE, Route109_OnFrame
	.byte 0

Route109_OnTransition:
	setflag FLAG_VISITED_SLATEPORT_CITY
	goto_if_set FLAG_DEFEATED_HOT_HOUSE, SetHotHouseGirlPermLoc
	end

Route109_OnLoad:
	goto_if_set FLAG_DEFEATED_HOT_HOUSE, SetHotHouseGirlPermLoc
	end

Route109_OnWarp:
	map_script_2 VAR_LEAVING_HOT_HOUSE, 1, Route109_EventScript_PlayerTurnNorth
	.2byte 0

Route109_EventScript_PlayerTurnNorth::
	turnobject OBJ_EVENT_ID_PLAYER, DIR_SOUTH
	end

Route109_OnFrame:
	map_script_2 VAR_LEAVING_HOT_HOUSE, 1, Route109_EventScript_ExitHotHouse
	.2byte 0

Route109_EventScript_ExitHotHouse::
	lockall
	applymovement OBJ_EVENT_ID_PLAYER, Common_Movement_WalkDown2
	waitmovement 0
	applymovement LOCALID_LITTLE_GIRL, Route109_EventScript_GirlWalkHotHouse
	waitmovement 0
	applymovement OBJ_EVENT_ID_PLAYER, Common_Movement_FaceUp
	waitmovement 0
	msgbox Route109_Text_ThanksForPlaying, MSGBOX_DEFAULT
	closemessage
	cleartrainerflag TRAINER_JOHANNA
	cleartrainerflag TRAINER_BRIAN
	cleartrainerflag TRAINER_BRIAN_2
	cleartrainerflag TRAINER_DWAYNE
	clearflag FLAG_DEFEATED_HOT_HOUSE
	clearflag FLAG_RECEIVED_HOT_HOUSE_GIFT_MON
	setvar VAR_HOT_HOUSE_STATE, 0
	setvar VAR_ENTERING_HOT_HOUSE, 0
	setvar VAR_LEAVING_HOT_HOUSE, 0
	releaseall
	end

Route109_EventScript_GirlWalkHotHouse::
	walk_right
	walk_in_place_faster_down
	step_end

Route109_EventScript_StartDepartForDewford::
	call EventScript_BackupMrBrineyLocation
	setobjectsubpriority LOCALID_BRINEY_R109, MAP_ROUTE109, 0
	setobjectsubpriority OBJ_EVENT_ID_PLAYER, MAP_ROUTE109, 0
	applymovement LOCALID_BRINEY_R109, Route109_Movement_BrineyEnterBoat
	waitmovement 0
	removeobject LOCALID_BRINEY_R109
	switch VAR_FACING
	case DIR_SOUTH, Route109_EventScript_EnterBoatSouth
	case DIR_WEST, Route109_EventScript_EnterBoatWest
	case DIR_EAST, Route109_EventScript_EnterBoatEast
	end

Route109_EventScript_EnterBoatSouth::
	applymovement OBJ_EVENT_ID_PLAYER, Route109_Movement_PlayerEnterBoatSouth
	waitmovement 0
	goto Route109_EventScript_DoSailToDewford
	end

Route109_EventScript_EnterBoatEast::
	applymovement OBJ_EVENT_ID_PLAYER, Route109_Movement_PlayerEnterBoatEast
	waitmovement 0
	goto Route109_EventScript_DoSailToDewford
	end

Route109_EventScript_EnterBoatWest::
	applymovement OBJ_EVENT_ID_PLAYER, Route109_Movement_PlayerEnterBoatWest
	waitmovement 0
	goto Route109_EventScript_DoSailToDewford
	end

Route109_EventScript_DoSailToDewford::
	hideobjectat OBJ_EVENT_ID_PLAYER, MAP_ROUTE109
	call Common_EventScript_PlayBrineysBoatMusic
	applymovement LOCALID_BOAT_R109, Route109_Movement_SailToDewford
	applymovement OBJ_EVENT_ID_PLAYER, Route109_Movement_SailToDewford
	waitmovement 0
	delay 50
	call Common_EventScript_StopBrineysBoatMusic
	showobjectat OBJ_EVENT_ID_PLAYER, MAP_DEWFORD_TOWN
	applymovement OBJ_EVENT_ID_PLAYER, Route109_Movement_PlayerExitBoat
	waitmovement 0
	addobject LOCALID_BOAT_DEWFORD
	clearflag FLAG_HIDE_MR_BRINEY_BOAT_DEWFORD_TOWN
	setobjectxyperm LOCALID_BRINEY_DEWFORD, 12, 8
	addobject LOCALID_BRINEY_DEWFORD
	setobjectsubpriority LOCALID_BRINEY_DEWFORD, MAP_DEWFORD_TOWN, 0
	applymovement LOCALID_BRINEY_DEWFORD, Route109_Movement_BrineyExitBoat
	waitmovement 0
	clearflag FLAG_HIDE_MR_BRINEY_DEWFORD_TOWN
	setflag FLAG_HIDE_ROUTE_109_MR_BRINEY_BOAT
	hideobjectat LOCALID_BOAT_R109, MAP_ROUTE109
	msgbox DewfordTown_Text_BrineyLandedInDewford, MSGBOX_DEFAULT
	closemessage
	copyvar VAR_BRINEY_LOCATION, VAR_0x8008
	resetobjectsubpriority OBJ_EVENT_ID_PLAYER, MAP_ROUTE109
	resetobjectsubpriority LOCALID_BRINEY_DEWFORD, MAP_DEWFORD_TOWN
	copyobjectxytoperm LOCALID_BRINEY_DEWFORD
	release
	end

Route109_Movement_SailToDewford:
	walk_in_place_faster_down
	walk_down
	walk_down
	walk_fast_down
	walk_fast_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_faster_down
	walk_fast_down
	walk_fast_down
	walk_fast_left
	walk_fast_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_faster_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_fast_left
	walk_left
	walk_left
	walk_in_place_faster_down
	step_end

Route109_Movement_PlayerEnterBoatSouth:
	walk_down
	walk_down
	step_end

Route109_Movement_PlayerExitBoat:
	walk_down
	walk_down
	walk_left
	walk_in_place_faster_right
	step_end

Route109_Movement_PlayerEnterBoatEast:
	walk_right
	walk_down
	step_end

Route109_Movement_PlayerEnterBoatWest:
	walk_left
	walk_down
	step_end

Route109_Movement_BrineyEnterBoat:
	walk_down
	step_end

Route109_Movement_BrineyExitBoat:
	walk_down
	walk_in_place_faster_left
	step_end

Route109_EventScript_MrBriney::
	lock
	faceplayer
	goto_if_unset FLAG_DELIVERED_DEVON_GOODS, Route109_EventScript_HaveNotDeliveredDevonGood
	goto Route109_EventScript_DeliveredDevonGoods
	end

Route109_EventScript_HaveNotDeliveredDevonGood::
	message Route109_Text_BrineySailToDewfordQuestion
	msgbox Route109_Text_BrineySailToDewfordQuestion, MSGBOX_YESNO
	goto_if_eq VAR_RESULT, NO, Route109_EventScript_StayHere
	goto Route109_EventScript_SailToDewford
	end

Route109_EventScript_DeliveredDevonGoods::
	message Route109_Text_BrineyWhereAreWeBound
	waitmessage
	multichoicedefault 21, 8, MULTI_BRINEY_OFF_DEWFORD, 1, FALSE
	switch VAR_RESULT
	case 0, Route109_EventScript_SailToDewford
	case 1, Route109_EventScript_ChoseNotToSail
	case MULTI_B_PRESSED, Route109_EventScript_ChoseNotToSail
	end

Route109_EventScript_SailToDewford::
	msgbox Route109_Text_BrineyDewfordItIs, MSGBOX_DEFAULT
	closemessage
	goto Route109_EventScript_StartDepartForDewford
	end

Route109_EventScript_StayHere::
	msgbox Route109_Text_BrineyDeliverDevonGoods, MSGBOX_DEFAULT
	release
	end

Route109_EventScript_ChoseNotToSail::
	msgbox Route109_Text_BrineyTellMeWhenYouNeedToSail, MSGBOX_DEFAULT
	release
	end

Route109_EventScript_SandCastleBoy::
	lock
	faceplayer
	msgbox Route109_Text_SandCastleTakingLongTime, MSGBOX_DEFAULT
	closemessage
	applymovement VAR_LAST_TALKED, Common_Movement_FaceOriginalDirection
	waitmovement 0
	release
	end

Route109_EventScript_SoftSandGirl::
	lock
	faceplayer
	special GetPlayerBigGuyGirlString
	goto_if_set FLAG_RECEIVED_SOFT_SAND, Route109_EventScript_AlreadyReceivedSoftSand
	msgbox Route109_Text_YouCanHaveThis, MSGBOX_DEFAULT
	giveitem ITEM_SOFT_SAND
	goto_if_eq VAR_RESULT, 0, Common_EventScript_ShowBagIsFull
	closemessage
	applymovement VAR_LAST_TALKED, Common_Movement_FaceOriginalDirection
	waitmovement 0
	setflag FLAG_RECEIVED_SOFT_SAND
	release
	end

Route109_EventScript_AlreadyReceivedSoftSand::
	msgbox Route109_Text_WereGoingToMakeBigCastle, MSGBOX_DEFAULT
	applymovement VAR_LAST_TALKED, Common_Movement_FaceOriginalDirection
	waitmovement 0
	release
	end

Route109_EventScript_Woman::
	msgbox Route109_Text_LittleKidsDartAround, MSGBOX_NPC
	end

Route109_EventScript_OldMan::
	msgbox Route109_Text_ZigzagoonPicksUpLitter, MSGBOX_NPC
	end

Route109_EventScript_Zigzagoon::
	lock
	faceplayer
	waitse
	playmoncry SPECIES_ZIGZAGOON, CRY_MODE_NORMAL
	msgbox Route109_Text_ZigzagoonCry, MSGBOX_DEFAULT
	waitmoncry
	release
	end

Route109_EventScript_SeashoreHouseSign::
	msgbox Route109_Text_SeashoreHouseSign, MSGBOX_SIGN
	end

Route109_EventScript_TrainerTipsSign::
	msgbox Route109_Text_TrainerTipsSign, MSGBOX_SIGN
	end

Route109_EventScript_David::
	trainerbattle_single TRAINER_DAVID, Route109_Text_DavidIntro, Route109_Text_DavidDefeated
	msgbox Route109_Text_DavidPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_EventScript_Alice::
	trainerbattle_single TRAINER_ALICE, Route109_Text_AliceIntro, Route109_Text_AliceDefeated
	msgbox Route109_Text_AlicePostBattle, MSGBOX_AUTOCLOSE
	end

Route109_EventScript_Huey::
	trainerbattle_single TRAINER_HUEY, Route109_Text_HueyIntro, Route109_Text_HueyDefeated
	msgbox Route109_Text_HueyPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_EventScript_Edmond::
	trainerbattle_single TRAINER_EDMOND, Route109_Text_EdmondIntro, Route109_Text_EdmondDefeated
	msgbox Route109_Text_EdmondPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_EventScript_Ricky::
	trainerbattle_single TRAINER_RICKY_1, Route109_Text_RickyIntro, Route109_Text_RickyDefeated, Route109_EventScript_RickyRegisterMatchCallAfterBattle
	specialvar VAR_RESULT, ShouldTryRematchBattle
	goto_if_eq VAR_RESULT, TRUE, Route109_EventScript_RickyRematch
	msgbox Route109_Text_RickyPostBattle, MSGBOX_DEFAULT
	release
	end

Route109_EventScript_RickyRegisterMatchCallAfterBattle::
	special PlayerFaceTrainerAfterBattle
	waitmovement 0
	msgbox Route109_Text_RickyRegister, MSGBOX_DEFAULT
	register_matchcall TRAINER_RICKY_1
	release
	end

Route109_EventScript_RickyRematch::
	trainerbattle_rematch TRAINER_RICKY_1, Route109_Text_RickyRematchIntro, Route109_Text_RickyRematchDefeated
	msgbox Route109_Text_RickyRematchPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_EventScript_Lola::
	trainerbattle_single TRAINER_LOLA_1, Route109_Text_LolaIntro, Route109_Text_LolaDefeated, Route109_EventScript_LolaRegisterMatchCallAfterBattle
	specialvar VAR_RESULT, ShouldTryRematchBattle
	goto_if_eq VAR_RESULT, TRUE, Route109_EventScript_LolaRematch
	msgbox Route109_Text_LolaPostBattle, MSGBOX_DEFAULT
	release
	end

Route109_EventScript_LolaRegisterMatchCallAfterBattle::
	special PlayerFaceTrainerAfterBattle
	waitmovement 0
	msgbox Route109_Text_LolaRegister, MSGBOX_DEFAULT
	register_matchcall TRAINER_LOLA_1
	release
	end

Route109_EventScript_LolaRematch::
	trainerbattle_rematch TRAINER_LOLA_1, Route109_Text_LolaRematchIntro, Route109_Text_LolaRematchDefeated
	msgbox Route109_Text_LolaRematchPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_EventScript_Austina::
	trainerbattle_single TRAINER_AUSTINA, Route109_Text_AustinaIntro, Route109_Text_AustinaDefeated
	msgbox Route109_Text_AustinaPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_EventScript_Gwen::
	trainerbattle_single TRAINER_GWEN, Route109_Text_GwenIntro, Route109_Text_GwenDefeated
	msgbox Route109_Text_GwenPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_EventScript_Carter::
	trainerbattle_single TRAINER_CARTER, Route109_Text_CarterIntro, Route109_Text_CarterDefeated
	msgbox Route109_Text_CarterPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_EventScript_Paul::
	trainerbattle_double TRAINER_MEL_AND_PAUL, Route109_Text_PaulIntro, Route109_Text_PaulDefeated, Route109_Text_PaulNotEnoughPokemon
	msgbox Route109_Text_PaulPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_EventScript_Mel::
	trainerbattle_double TRAINER_MEL_AND_PAUL, Route109_Text_MelIntro, Route109_Text_MelDefeated, Route109_Text_MelNotEnoughPokemon
	msgbox Route109_Text_MelPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_EventScript_Chandler::
	trainerbattle_single TRAINER_CHANDLER, Route109_Text_ChandlerIntro, Route109_Text_ChandlerDefeated
	msgbox Route109_Text_ChandlerPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_EventScript_Hailey::
	trainerbattle_single TRAINER_HAILEY, Route109_Text_HaileyIntro, Route109_Text_HaileyDefeated
	msgbox Route109_Text_HaileyPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_EventScript_Elijah::
	trainerbattle_single TRAINER_ELIJAH, Route109_Text_ElijahIntro, Route109_Text_ElijahDefeated
	msgbox Route109_Text_ElijahPostBattle, MSGBOX_AUTOCLOSE
	end

DewfordTown_Text_BrineyLandedInSlateportDeliverGoods:
	.string "Mr. Briney: Ahoy!\n"
	.string "We've made land in Slateport!\p"
	.string "I suppose you're going to visit Capt.\n"
	.string "Stern and deliver the Devon Goods?$"

Route109_Text_BrineySailToDewfordQuestion:
	.string "Mr. Briney: I thought you're supposed\n"
	.string "to deliver the Devon Goods.\p"
	.string "Would you like to sail back to\n"
	.string "Dewford, then?$"

Route109_Text_BrineyDewfordItIs:
	.string "Mr. Briney: Dewford it is, then!\p"
	.string "Anchors aweigh!\n"
	.string "Peeko, we're setting sail, my darling!$"

Route109_Text_BrineyDeliverDevonGoods:
	.string "Mr. Briney: Then you go on and deliver\n"
	.string "the Devon Goods. I'll be waiting.$"

DewfordTown_Text_BrineyLandedInSlateport:
	.string "Mr. Briney: Ahoy! We've made land in\n"
	.string "Slateport!\p"
	.string "You just go on and tell me whenever\n"
	.string "you want to set sail again!$"

Route109_Text_BrineyWhereAreWeBound:
	.string "Mr. Briney: Ahoy!\n"
	.string "For you, I'll go out to sea anytime!\p"
	.string "Now, my friend, where are we bound?$"

Route109_Text_BrineyTellMeWhenYouNeedToSail:
	.string "Mr. Briney: You just tell me whenever\n"
	.string "you need to set sail again!$"

Route109_Text_LittleKidsDartAround:
	.string "Little kids can dart around so quickly…\p"
	.string "You don't dare take your eyes off them\n"
	.string "for an instant. It's very taxing.\p"
	.string "Mine are with my Pokémon, so they\n"
	.string "should be okay, but…$"

Route109_Text_SandCastleTakingLongTime:
	.string "Our sand castle's taking a long time\n"
	.string "to make.$"

Route109_Text_YouCanHaveThis:
	.string "You can have this!$"

Route109_Text_WereGoingToMakeBigCastle:
	.string "We're going to get all the sand from\n"
	.string "the beach and make a big castle!\p"
	.string "And then we're going to be a king and\n"
	.string "queen.\p"
	.string "We'll let you be a servant.$"

Route109_Text_ZigzagoonPicksUpLitter:
	.string "The water around these parts is clean.\p"
	.string "But, I get my Zigzagoon to pick up\n"
	.string "litter from the shoreline at times.\p"
	.string "Dirty water becomes rain and joins our\n"
	.string "rivers, which we drink from…\p"
	.string "If we pollute the sea, it all comes\n"
	.string "back to haunt us eventually.$"

Route109_Text_ZigzagoonCry:
	.string "Zigzagoon: Guguu?$"

Route109_Text_SeashoreHouseSign:
	.string "Hot House\p"
	.string "“May hot battles rage on hot sands!\n"
	.string "The place for hot trainers!”$"

Route109_Text_TrainerTipsSign:
	.string "Trainer Tips\p"
	.string "Some areas are blocked off until\n"
	.string "certain events are completed, such as\l"
	.string "obtaining a new Gym Badge.$"


Route109_Text_ThanksForPlaying:
	.string "Yo, trainer!\p"
	.string "Looks like you beat the trainers in the\n"
	.string "Hot House no problem!\p"
	.string "Thanks for stopping by, and feel free\n"
	.string "to come take the challenge again\l"
	.string "anytime, yo!$"
`

script Route109_EventScript_HotHouseGirl{
	lock
	faceplayer
	goto_if_unset(FLAG_BADGE02_GET, Route109_EventScript_SeashoreHouseGirlNoBadge)
	msgbox(Route109_Text_HotHouseFullIntro)
	closemessage()
	goto(Route109_EventScript_WhichRewardMenu)
}

script Route109_EventScript_WhichRewardMenu {
	msgbox(Route109_Text_IntroQuestion)

	dynmultipush("Badge 2", 2)

	if(!flag(FLAG_BADGE03_GET)){
		dynmultipush("{COLOR WHITE}{SHADOW LIGHT_GRAY}Badge 3{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}", 3)
	}
	else{
		dynmultipush("Badge 3", 3)
	}

	if(!flag(FLAG_BADGE04_GET)){
		dynmultipush("{COLOR WHITE}{SHADOW LIGHT_GRAY}Badge 4{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}", 4)
	}
	else{
		dynmultipush("Badge 4", 4)
	}

	if(!flag(FLAG_BADGE05_GET)){
		dynmultipush("{COLOR WHITE}{SHADOW LIGHT_GRAY}Badge 5{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}", 5)
	}
	else{
		dynmultipush("Badge 5", 5)
	}

	if(!flag(FLAG_BADGE06_GET)){
		dynmultipush("{COLOR WHITE}{SHADOW LIGHT_GRAY}Badge 6{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}", 6)
	}
	else{
		dynmultipush("Badge 6", 6)
	}

	if(!flag(FLAG_BADGE07_GET)){
		dynmultipush("{COLOR WHITE}{SHADOW LIGHT_GRAY}Badge 7{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}", 7)
	}
	else{
		dynmultipush("Badge 7", 7)
	}

	dynmultipush("Cancel", MULTI_B_PRESSED)
    // setting initial selected to a non-existant ID will always have it point to the first option
	//.macro dynmultistack left:req, top:req, ignoreBPress:req, maxBeforeScroll:req, shouldSort:req, initialSelected:req, callbacks:req
	dynmultistack(0, 0, FALSE, 6, FALSE, 2, DYN_MULTICHOICE_CB_NONE)

	if (var(VAR_RESULT) == MULTI_B_PRESSED)
	{
		goto(Route109_EventScript_HotHouseNo)
	}

	// copy the result of the multichoice into var 8005
	copyvar(VAR_0x8005, VAR_RESULT)

	// get the number of badges the player has into var 8006
	specialvar(VAR_0x8006, GetNumBadges)

	compare(VAR_0x8006, VAR_0x8005)
	goto_if_lt(Route109_EventScript_SorryNotEnoughBadges)
	buffernumberstring(STR_VAR_1, VAR_0x8005)

    if (var(VAR_0x8005) == 2)
	{
		goto(Route109_EventScript_Badge2Options)
	}

	if (var(VAR_0x8005) == 3)
	{
		goto(Route109_EventScript_Badge3Options)
	}

	if (var(VAR_0x8005) == 4)
	{
		goto(Route109_EventScript_Badge4Options)
	}

	if (var(VAR_0x8005) == 5)
	{
		goto(Route109_EventScript_Badge5Options)
	}

	if (var(VAR_0x8005) == 6)
	{
		goto(Route109_EventScript_Badge6Options)
	}

	if (var(VAR_0x8005) == 7)
	{
		goto(Route109_EventScript_Badge7Options)
	}

	goto(Route109_EventScript_HotHouseNo)

}

script Route109_EventScript_Badge2Options {
	msgbox(Route109_Text_BadgeRewardsQuestion)

	dynmultipush("Tyrogue", 1)
	dynmultipush("Pansage", 2)
	dynmultipush("Panpour", 3)
	dynmultipush("Pansear", 4)
	dynmultipush("Back", MULTI_B_PRESSED)
	
	
	// setting initial selected to a non-existant ID will always have it point to the first option
	//.macro dynmultistack left:req, top:req, ignoreBPress:req, maxBeforeScroll:req, shouldSort:req, initialSelected:req, callbacks:req
	dynmultistack(0, 0, FALSE, 6, FALSE, 1, DYN_MULTICHOICE_CB_NONE)

	if (var(VAR_RESULT) == MULTI_B_PRESSED) 
	{
		goto(Route109_EventScript_WhichRewardMenu)
	}

	// copy the result of the multichoice into var 8004
	copyvar(VAR_0x8004, VAR_RESULT)
	goto(Route109_EventScript_ConfirmAndEnterHotHouse)

}

script Route109_EventScript_Badge3Options {
	msgbox(Route109_Text_BadgeRewardsQuestion)

	dynmultipush("Misdreavus", 5)
	dynmultipush("Pinsir", 6)
	dynmultipush("Heracross", 7)
	dynmultipush("Scyther", 8)
	dynmultipush("Back", MULTI_B_PRESSED)
	
	
	// setting initial selected to a non-existant ID will always have it point to the first option
	//.macro dynmultistack left:req, top:req, ignoreBPress:req, maxBeforeScroll:req, shouldSort:req, initialSelected:req, callbacks:req
	dynmultistack(0, 0, FALSE, 6, FALSE, 5, DYN_MULTICHOICE_CB_NONE)

	if (var(VAR_RESULT) == MULTI_B_PRESSED) 
	{
		goto(Route109_EventScript_WhichRewardMenu)
	}

	// copy the result of the multichoice into var 8004
	copyvar(VAR_0x8004, VAR_RESULT)
	goto(Route109_EventScript_ConfirmAndEnterHotHouse)

}

script Route109_EventScript_Badge4Options {
	msgbox(Route109_Text_BadgeRewardsQuestion)

	dynmultipush("Eevee", 9)
	dynmultipush("Magby", 10)
	dynmultipush("Elekid", 11)
	dynmultipush("Smoochum", 12)
	dynmultipush("Back", MULTI_B_PRESSED)
	
	
	// setting initial selected to a non-existant ID will always have it point to the first option
	//.macro dynmultistack left:req, top:req, ignoreBPress:req, maxBeforeScroll:req, shouldSort:req, initialSelected:req, callbacks:req
	dynmultistack(0, 0, FALSE, 6, FALSE, 9, DYN_MULTICHOICE_CB_NONE)

	if (var(VAR_RESULT) == MULTI_B_PRESSED) 
	{
		goto(Route109_EventScript_WhichRewardMenu)
	}

	// copy the result of the multichoice into var 8004
	copyvar(VAR_0x8004, VAR_RESULT)
	goto(Route109_EventScript_ConfirmAndEnterHotHouse)

}

script Route109_EventScript_Badge5Options {
	msgbox(Route109_Text_BadgeRewardsQuestion)

	dynmultipush("Riolu", 13)
	dynmultipush("Togepi", 14)
	dynmultipush("Back", MULTI_B_PRESSED)
	
	
	// setting initial selected to a non-existant ID will always have it point to the first option
	//.macro dynmultistack left:req, top:req, ignoreBPress:req, maxBeforeScroll:req, shouldSort:req, initialSelected:req, callbacks:req
	dynmultistack(0, 0, FALSE, 6, FALSE, 13, DYN_MULTICHOICE_CB_NONE)

	if (var(VAR_RESULT) == MULTI_B_PRESSED) 
	{
		goto(Route109_EventScript_WhichRewardMenu)
	}

	// copy the result of the multichoice into var 8004
	copyvar(VAR_0x8004, VAR_RESULT)
	goto(Route109_EventScript_ConfirmAndEnterHotHouse)

}

script Route109_EventScript_Badge6Options {
	msgbox(Route109_Text_BadgeRewardsQuestion)

	dynmultipush("Type: Null", 15)
	dynmultipush("Back", MULTI_B_PRESSED)
	
	
	// setting initial selected to a non-existant ID will always have it point to the first option
	//.macro dynmultistack left:req, top:req, ignoreBPress:req, maxBeforeScroll:req, shouldSort:req, initialSelected:req, callbacks:req
	dynmultistack(0, 0, FALSE, 6, FALSE, 15, DYN_MULTICHOICE_CB_NONE)

	if (var(VAR_RESULT) == MULTI_B_PRESSED) 
	{
		goto(Route109_EventScript_WhichRewardMenu)
	}

	// copy the result of the multichoice into var 8004
	copyvar(VAR_0x8004, VAR_RESULT)
	goto(Route109_EventScript_ConfirmAndEnterHotHouse)

}

script Route109_EventScript_Badge7Options {
	msgbox(Route109_Text_BadgeRewardsQuestion)

	dynmultipush("Charcadet", 16)
	dynmultipush("Aerodactyl", 17)
	dynmultipush("Back", MULTI_B_PRESSED)
	
	
	// setting initial selected to a non-existant ID will always have it point to the first option
	//.macro dynmultistack left:req, top:req, ignoreBPress:req, maxBeforeScroll:req, shouldSort:req, initialSelected:req, callbacks:req
	dynmultistack(0, 0, FALSE, 6, FALSE, 16, DYN_MULTICHOICE_CB_NONE)

	if (var(VAR_RESULT) == MULTI_B_PRESSED) 
	{
		goto(Route109_EventScript_WhichRewardMenu)
	}

	// copy the result of the multichoice into var 8004
	copyvar(VAR_0x8004, VAR_RESULT)
	goto(Route109_EventScript_ConfirmAndEnterHotHouse)

}

script Route109_EventScript_ConfirmAndEnterHotHouse {
	msgbox(Route109_Text_EnterCantLeave, MSGBOX_YESNO)

	if (var(VAR_RESULT) == NO)
	{
		goto(Route109_EventScript_HotHouseNo)
	}

	// copy the result of the multichoice into VAR_HOT_HOUSE_STATE
	copyvar(VAR_HOT_HOUSE_STATE, VAR_0x8004)
	setvar(VAR_ENTERING_HOT_HOUSE, 1)

	msgbox(Route109_Text_GoodLuckTrainer, MSGBOX_DEFAULT)
	closemessage()

	switch(var(VAR_FACING))
	{
		case DIR_EAST:
			applymovement(LOCALID_LITTLE_GIRL, HotHouseGirlUnblockStepEast)
			waitmovement(0)
			applymovement(OBJ_EVENT_ID_PLAYER, PlayerEnterHotHouseStepEast)
			waitmovement(0)
		case DIR_NORTH:
			applymovement(LOCALID_LITTLE_GIRL, HotHouseGirlUnblockStepWest)
			waitmovement(0)
			applymovement(OBJ_EVENT_ID_PLAYER, PlayerEnterHotHouseStepNorth)
			waitmovement(0)
		case DIR_WEST:
			applymovement(LOCALID_LITTLE_GIRL, HotHouseGirlUnblockStepWest)
			waitmovement(0)
			applymovement(OBJ_EVENT_ID_PLAYER, PlayerEnterHotHouseStepWest)
			waitmovement(0)
		default:
			applymovement(LOCALID_LITTLE_GIRL, HotHouseGirlUnblockStepWest)
			waitmovement(0)
			applymovement(OBJ_EVENT_ID_PLAYER, PlayerEnterHotHouseStepNorth)
			waitmovement(0)
	}
	

	warp(MAP_ROUTE109_SEASHORE_HOUSE, 6, 9)
	waitstate
	release
	end
}

script Route109_EventScript_SeashoreHouseGirlNoBadge {
	msgbox(Route109_Text_PapasSpotGettingFixed)
	release
	end
}

script Route109_EventScript_HotHouseNo {
    msgbox(Route109_Text_HotHouseNo)
	setvar(VAR_HOT_HOUSE_STATE, 0)
	setvar(VAR_ENTERING_HOT_HOUSE, 0)
    release
    end
}

script Route109_EventScript_SorryNotEnoughBadges {
    msgbox(Route109_Text_SorryNotEnoughBadges)
	setvar(VAR_HOT_HOUSE_STATE, 0)
	setvar(VAR_ENTERING_HOT_HOUSE, 0)
    release
    end
}

script HotHouseGirlUnblockStepWest
{
	walk_left
	face_right
	step_end
}

script HotHouseGirlUnblockStepEast
{
	walk_right
	face_left
	step_end
}

script PlayerEnterHotHouseStepEast
{
	walk_right
	walk_up
	step_end
}

script PlayerEnterHotHouseStepWest
{
	walk_left
	walk_up
	step_end
}

script PlayerEnterHotHouseStepNorth
{
	walk_up
	walk_up
	step_end
}

script PlayerEnteredHotHouse
{
	walk_up
	step_end
}

script SetHotHouseGirlPermLoc {
	setobjectxyperm(LOCALID_LITTLE_GIRL, 11, 6)
	end
}

text Route109_Text_PapasSpotGettingFixed {
	"Yo, trainer!\p"
	"Sorry, my papa's spot is getting fixed\n"
	"up right now.\p"
	"Make sure you come back later to see\n"
	"the hottest spot in town, though!"
}

text Route109_Text_HotHouseFullIntro {
	"Yo, trainer!\n"
	"Looks like you've got the right stuff\l"
	"to enter the new Hot House!\p"
	"My papa totally revamped it, and we've\n"
	"got all sorts of great rewards now, but\l"
	"the trainers inside will be stronger if\l"
	"you try to go for better rewards!\p"
	"You can also come back and challenge\n"
	"the Hot House as many times as you'd\l"
	"like, {COLOR GREEN}{SHADOW LIGHT_GREEN}but be careful, because once you\l"
	"enter, you can't leave or access your\l"
	"portable PC!{COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}"
}

text Route109_Text_IntroQuestion {
	"Which reward level do you want to\n"
	"compete for?"
}

text Route109_Text_BadgeRewardsQuestion {
	"Which Badge {STR_VAR_1} reward Pokémon do you\n"
	"want to compete for?"
}

text Route109_Text_EnterCantLeave {
	"You got it, trainer!\n"
	"Papa said I have to warn everyone again\l"
	"before they go inside:\p"
	"{COLOR GREEN}{SHADOW LIGHT_GREEN}Once you enter the Hot House, you can't\n"
	"leave or use your PC until you white out\l"
	"or beat all the trainers; {COLOR DARK_GRAY}{SHADOW LIGHT_GRAY}is that okay?"
}

text Route109_Text_GoodLuckTrainer {
	"That's what I'm talking about, yeah!\n"
	"You got this, trainer, good luck in\l"
	"there!"
}


text Route109_Text_HotHouseNo {
	"No worries! The Hot House is open if you\n"
	"change your mind!"
}

text Route109_Text_SorryNotEnoughBadges {
	"It looks like you don't have enough\n"
	"Badges to compete for that reward yet.\l"
	"Come back once you have more Badges!"
}
