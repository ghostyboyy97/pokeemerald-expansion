raw `
Route109_SeashoreHouse_MapScripts::
	map_script MAP_SCRIPT_ON_TRANSITION, Route109_SeashoreHouse_OnTransition
	map_script MAP_SCRIPT_ON_WARP_INTO_MAP_TABLE, Route109_SeashoreHouse_OnWarp
	map_script MAP_SCRIPT_ON_FRAME_TABLE, Route109_SeashoreHouse_OnFrame
	.byte 0


Route109_SeashoreHouse_OnWarp:
	map_script_2 VAR_ENTERING_HOT_HOUSE, 1, Route109_SeashoreHouse_EventScript_PlayerTurnNorth
	.2byte 0

Route109_SeashoreHouse_EventScript_PlayerTurnNorth::
	turnobject OBJ_EVENT_ID_PLAYER, DIR_NORTH
	end

Route109_SeashoreHouse_OnFrame:
	map_script_2 VAR_ENTERING_HOT_HOUSE, 1, Route109_SeashoreHouse_EventScript_EnterRoom
	.2byte 0

Route109_SeashoreHouse_EventScript_EnterRoom::
	lockall
	applymovement OBJ_EVENT_ID_PLAYER, Common_Movement_WalkUp2
	waitmovement 0
	setmetatile 6, 9, METATILE_BuildingNormalFloor, FALSE
	setmetatile 7, 9, METATILE_BuildingNormalFloor, FALSE
	special DrawWholeMapView
	playse SE_TRUCK_DOOR
	setvar VAR_ENTERING_HOT_HOUSE, 0
	cleartrainerflag TRAINER_JOHANNA
	cleartrainerflag TRAINER_BRIAN
	cleartrainerflag TRAINER_BRIAN_2
	cleartrainerflag TRAINER_DWAYNE
	releaseall
	end

Route109_SeashoreHouse_OnTransition:
	setflag FLAG_LANDMARK_SEASHORE_HOUSE
	end

Route109_SeashoreHouse_EventScript_Dwayne::
	trainerbattle_single TRAINER_DWAYNE, Route109_SeashoreHouse_Text_DwayneIntro, Route109_SeashoreHouse_Text_DwayneDefeated, Route109_SeashoreHouse_EventScript_CheckTrainersCompletion
	msgbox Route109_SeashoreHouse_Text_DwaynePostBattle, MSGBOX_AUTOCLOSE
	end

Route109_SeashoreHouse_EventScript_Johanna::
	trainerbattle_single TRAINER_JOHANNA, Route109_SeashoreHouse_Text_JohannaIntro, Route109_SeashoreHouse_Text_JohannaDefeated, Route109_SeashoreHouse_EventScript_CheckTrainersCompletion
	msgbox Route109_SeashoreHouse_Text_JohannaPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_SeashoreHouse_EventScript_Brian::
	goto_if_ge VAR_HOT_HOUSE_STATE, 16, Route109_SeashoreHouse_EventScript_BrianDouble
	trainerbattle_single TRAINER_BRIAN, Route109_SeashoreHouse_Text_BrianIntro, Route109_SeashoreHouse_Text_BrianDefeated, Route109_SeashoreHouse_EventScript_CheckTrainersCompletion
	msgbox Route109_SeashoreHouse_Text_BrianPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_SeashoreHouse_EventScript_BrianDouble::
	trainerbattle_single TRAINER_BRIAN_2, Route109_SeashoreHouse_Text_BrianIntro, Route109_SeashoreHouse_Text_BrianDefeated, Route109_SeashoreHouse_EventScript_CheckTrainersCompletion
	msgbox Route109_SeashoreHouse_Text_BrianPostBattle, MSGBOX_AUTOCLOSE
	end

Route109_SeashoreHouse_EventScript_CheckTrainersCompletion::
	goto_if_not_defeated TRAINER_DWAYNE, Route109_SeashoreHouse_EventScript_TrainersNotCompleted
	goto_if_not_defeated TRAINER_JOHANNA, Route109_SeashoreHouse_EventScript_TrainersNotCompleted
	call_if_ge VAR_HOT_HOUSE_STATE, 16, Route109_SeashoreHouse_EventScript_CheckBrianDoubleBattle
	call_if_lt VAR_HOT_HOUSE_STATE, 16, Route109_SeashoreHouse_EventScript_CheckBrianSingleBattle
	setflag FLAG_DEFEATED_HOT_HOUSE
	release
	end

Route109_SeashoreHouse_EventScript_CheckBrianSingleBattle::
	goto_if_not_defeated TRAINER_BRIAN, Route109_SeashoreHouse_EventScript_TrainersNotCompleted
	return

Route109_SeashoreHouse_EventScript_CheckBrianDoubleBattle::
	goto_if_not_defeated TRAINER_BRIAN_2, Route109_SeashoreHouse_EventScript_TrainersNotCompleted
	return

Route109_SeashoreHouse_EventScript_TrainersNotCompleted::
	release
	end

Route109_SeashoreHouse_Text_DwayneIntro:
	.string "If you're looking for a battle in the\n"
	.string "Hot House, you'll find no\l"
	.string "hotter trainer than me, matey!$"

Route109_SeashoreHouse_Text_DwayneDefeated:
	.string "That was a hot battle!\n"
	.string "I can accept that loss, matey!$"

Route109_SeashoreHouse_Text_DwaynePostBattle:
	.string "Not bad, matey, but you'll have to\n"
	.string "defeat the other two if you want that\l"
	.string "coveted reward!$"

Route109_SeashoreHouse_Text_JohannaIntro:
	.string "Boring battles aren't worth the effort.\p"
	.string "Fiery hot battles are what toughen up\n"
	.string "trainers and Pokémon!$"

Route109_SeashoreHouse_Text_JohannaDefeated:
	.string "That's hot!$"

Route109_SeashoreHouse_Text_JohannaPostBattle:
	.string "You might have what it takes to get\n"
	.string "this reward, you're a scorching hot\l"
	.string "battler!$"

Route109_SeashoreHouse_Text_BrianIntro:
	.string "Hall of Fame? First of all, buddy,\n"
	.string "You Will Never Defeat Guitarist Brian!$"

Route109_SeashoreHouse_Text_BrianDefeated:
	.string "Do I have to give you my badges now?\n"
	.string "My NELO is gonna suffer…$"

Route109_SeashoreHouse_Text_BrianPostBattle:
	.string "Did you know Greedent learns Counter?\n"
	.string "I found that one out the hard way.$"
`

script Route109_SeashoreHouse_EventScript_Owner {
	lock
	faceplayer
	goto_if_set(FLAG_RECEIVED_HOT_HOUSE_GIFT_MON, Route109_SeashoreHouse_EventScript_AlreadyReceivedPokemon)
	goto_if_set(FLAG_DEFEATED_HOT_HOUSE, Route109_SeashoreHouse_EventScript_DefeatedTrainers)
	goto_if_set(FLAG_TEMP_2, Route109_SeashoreHouse_EventScript_AlreadyGaveIntroduction)
	msgbox(Route109_SeashoreHouse_Text_SeashoreHouseIntro, MSGBOX_DEFAULT)
	setflag(FLAG_TEMP_2)
	release
	end
}

script Route109_SeashoreHouse_EventScript_AlreadyGaveIntroduction {
	msgbox(Route109_SeashoreHouse_Text_ShowMeSomeHotMatches, MSGBOX_DEFAULT)
	release
	end
}

script Route109_SeashoreHouse_EventScript_DefeatedTrainers {
	setvar(VAR_LEAVING_HOT_HOUSE, 1)
	setmetatile(6, 9, METATILE_BuildingWarpLeft, FALSE)
	setmetatile(7, 9, METATILE_BuildingWarpRight, FALSE)
	special(DrawWholeMapView)
	msgbox(Route109_SeashoreHouse_Text_TakeThisPokemon, MSGBOX_DEFAULT)
	switch(var(VAR_HOT_HOUSE_STATE))
	{
		case 1:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_TYROGUE)
			givemonrandom(SPECIES_TYROGUE, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_TYROGUE)
		case 2:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_PANSAGE)
			givemonrandom(SPECIES_PANSAGE, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_PANSAGE)
		case 3:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_PANPOUR)
			givemonrandom(SPECIES_PANPOUR, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_PANPOUR)
		case 4:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_PANSEAR)
			givemonrandom(SPECIES_PANSEAR, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_PANSEAR)
		case 5:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_MISDREAVUS)
			givemonrandom(SPECIES_MISDREAVUS, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_MISDREAVUS)
		case 6:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_PINSIR)
			givemonrandom(SPECIES_PINSIR, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_PINSIR)
		case 7:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_HERACROSS)
			givemonrandom(SPECIES_HERACROSS, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_HERACROSS)
		case 8:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_SCYTHER)
			givemonrandom(SPECIES_SCYTHER, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_SCYTHER)
		case 9:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_EEVEE)
			givemonrandom(SPECIES_EEVEE, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_EEVEE)
		case 10:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_MAGBY)
			givemonrandom(SPECIES_MAGBY, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_MAGBY)
		case 11:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_ELEKID)
			givemonrandom(SPECIES_ELEKID, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_ELEKID)
		case 12:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_SMOOCHUM)
			givemonrandom(SPECIES_SMOOCHUM, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_SMOOCHUM)
		case 13:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_RIOLU)
			givemonrandom(SPECIES_RIOLU, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_RIOLU)
		case 14:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_TOGEPI)
			givemonrandom(SPECIES_TOGEPI, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_TOGEPI)
		case 15:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_TYPE_NULL)
			givemonrandom(SPECIES_TYPE_NULL, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_TYPE_NULL)
		case 16:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_CHARCADET)
			givemonrandom(SPECIES_CHARCADET, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_CHARCADET)
		case 17:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_AERODACTYL)
			givemonrandom(SPECIES_AERODACTYL, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_AERODACTYL)
		default:
			setvar(VAR_TEMP_TRANSFERRED_SPECIES, SPECIES_TYROGUE)
			givemonrandom(SPECIES_TYROGUE, 25)
			bufferspeciesname(STR_VAR_1, SPECIES_TYROGUE)
	}
	
	goto_if_eq(VAR_RESULT, MON_GIVEN_TO_PARTY, Route109_SeashoreHouse_EventScript_ReceiveRewardParty)
	goto_if_eq(VAR_RESULT, MON_GIVEN_TO_PC, Route109_SeashoreHouse_EventScript_ReceiveRewardPC)
	goto(Common_EventScript_NoMoreRoomForPokemon)
	release
	end
}

script Route109_SeashoreHouse_EventScript_ReceiveRewardParty {
	call(Route109_SeashoreHouse_EventScript_ReceivedRewardFanfare)
	msgbox(gText_NicknameThisPokemon, MSGBOX_YESNO)
	goto_if_eq(VAR_RESULT, NO, Route109_SeashoreHouse_EventScript_ExplainReward)
	call(Common_EventScript_GetGiftMonPartySlot)
	call(Common_EventScript_NameReceivedPartyMon)
	goto(Route109_SeashoreHouse_EventScript_ExplainReward)
	end
}

script Route109_SeashoreHouse_EventScript_ReceiveRewardPC {
	call(Route109_SeashoreHouse_EventScript_ReceivedRewardFanfare)
	msgbox(gText_NicknameThisPokemon, MSGBOX_YESNO)
	goto_if_eq(VAR_RESULT, NO, Route109_SeashoreHouse_EventScript_SendRewardToPC)
	call(Common_EventScript_NameReceivedBoxMon)
	goto(Route109_SeashoreHouse_EventScript_SendRewardToPC)
	end
}

script Route109_SeashoreHouse_EventScript_SendRewardToPC {
	call(Common_EventScript_TransferredToPC)
	goto(Route109_SeashoreHouse_EventScript_ExplainReward)
	end
}

script Route109_SeashoreHouse_EventScript_ReceivedRewardFanfare {
	playfanfare(MUS_OBTAIN_ITEM)
	message(Route109_SeashoreHouse_Text_PlayerReceivedReward)
	waitmessage
	waitfanfare
	return
}

script Route109_SeashoreHouse_EventScript_ExplainReward {
	msgbox(Route109_SeashoreHouse_Text_PokemonDescribe, MSGBOX_DEFAULT)
	playse(SE_TRUCK_DOOR)
	setflag(FLAG_RECEIVED_HOT_HOUSE_GIFT_MON)
	release
	end
}

script Route109_SeashoreHouse_EventScript_AlreadyReceivedPokemon {
	msgbox(Route109_SeashoreHouse_Text_ThanksForCompeting, MSGBOX_DEFAULT)
	release
	end
}

text Route109_SeashoreHouse_Text_SeashoreHouseIntro {
	"I'm the owner of the Hot House.\n"
	"But you can call me Mr. Sea!\p"
	"What I love above all is to see hot\n"
	"Pokémon battles.\p"
	"Let me see that your heart burns hot!\p"
	"If you can defeat all the trainers\n"
	"here, I'll reward your efforts."
}

text Route109_SeashoreHouse_Text_ShowMeSomeHotMatches {
	"Show me some hot matches!\p"
	"I run this Hot House just for\n"
	"that reason alone!"
}

text Route109_SeashoreHouse_Text_TakeThisPokemon {
	"You're blistering hot!\n"
	"Those battles blazed!\l"
	"I'm more than just satisfied!\p"
	"Like my daughter promised, as a reward\n"
	"for defeating those scorching hot\l"
	"trainers, please accept this Pokémon."
}

text Route109_SeashoreHouse_Text_PlayerReceivedReward {
	"{PLAYER} received {STR_VAR_1}!"
}

text Route109_SeashoreHouse_Text_PokemonDescribe {
	"That Pokémon is a blazing hot battler,\n"
	"just like you!\l"
	"I know you'll be able to raise it well!\p"
	"Please come back anytime to challenge\n"
	"the Hot House again!"
}

text Route109_SeashoreHouse_Text_ThanksForCompeting {
	"Thanks for competing, you're one\n"
	"blazing hot trainer!\p"
	"Be sure to come back to try out another\n"
	"challenge some time!"
}
